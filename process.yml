# Orb 'gusto/gusto@0.0.13' resolved to 'gusto/gusto@0.0.13'
version: 2
jobs:
  gusto/ruby-lint:
    docker:
    - image: circleci/ruby:2.6-node-browsers
    steps:
    - checkout
    - run:
        command: |
          echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
          source $BASH_ENV
          gem install bundler
        name: Configure Bundler
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "Gemfile.lock" }}
        name: Restore Ruby Package Cache
    - run:
        command: |
          bundle install --jobs=4 --retry=3 --gemfile Gemfile --path vendor/bundle && git diff --exit-code Gemfile.lock
        name: Install dependencies
    - save_cache:
        key: v1-dependencies-{{ checksum "Gemfile.lock" }}
        name: Save Ruby Package Cache
        paths:
        - ./vendor/bundle
    - run:
        command: bundle exec rubocop
  ruby-test-graphql-1.9:
    docker:
    - image: circleci/ruby:2.3-node-browsers
    environment:
    - BUNDLE_PATH: vendor/bundle
    steps:
    - checkout
    - checkout
    - run:
        command: |
          echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
          source $BASH_ENV
          gem install bundler
        name: Configure Bundler
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "Gemfile.lock" }}
        name: Restore Ruby Package Cache
    - run:
        command: |
          bundle install --jobs=4 --retry=3 --gemfile Gemfile --path vendor/bundle && git diff --exit-code Gemfile.lock
        name: Install dependencies
    - save_cache:
        key: v1-dependencies-{{ checksum "Gemfile.lock" }}
        name: Save Ruby Package Cache
        paths:
        - ./vendor/bundle
    - run:
        name: Install appraisal dependencies
        command: |
          bundle exec appraisal graphql-1.9 bundle install --jobs=4 --retry=3 --path=../vendor/bundle
          bundle config unset path
    - run:
        command: bundle exec appraisal graphql-1.9 rake
  ruby-test-graphql-1.10:
    docker:
    - image: circleci/ruby:2.3-node-browsers
    environment:
    - BUNDLE_PATH: vendor/bundle
    steps:
    - checkout
    - checkout
    - run:
        command: |
          echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
          source $BASH_ENV
          gem install bundler
        name: Configure Bundler
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "Gemfile.lock" }}
        name: Restore Ruby Package Cache
    - run:
        command: |
          bundle install --jobs=4 --retry=3 --gemfile Gemfile --path vendor/bundle && git diff --exit-code Gemfile.lock
        name: Install dependencies
    - save_cache:
        key: v1-dependencies-{{ checksum "Gemfile.lock" }}
        name: Save Ruby Package Cache
        paths:
        - ./vendor/bundle
    - run:
        name: Install appraisal dependencies
        command: |
          bundle exec appraisal graphql-1.10 bundle install --jobs=4 --retry=3 --path=../vendor/bundle
          bundle config unset path
    - run:
        command: bundle exec appraisal graphql-1.10 rake
  integration-tests-graphql-1.9:
    docker:
    - image: circleci/ruby:2.6-node
    steps:
    - checkout
    - run:
        command: |
          echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
          source $BASH_ENV
          gem install bundler
        name: Configure Bundler
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "Gemfile.lock" }}
        name: Restore Ruby Package Cache
    - run:
        command: |
          bundle install --jobs=4 --retry=3 --gemfile Gemfile --path vendor/bundle && git diff --exit-code Gemfile.lock
        name: Install dependencies
    - save_cache:
        key: v1-dependencies-{{ checksum "Gemfile.lock" }}
        name: Save Ruby Package Cache
        paths:
        - ./vendor/bundle
    - run:
        name: Install appraisal dependencies
        command: |
          bundle exec appraisal graphql-1.9 bundle install --jobs=4 --retry=3 --path=../vendor/bundle
          bundle config unset path
    - checkout
    - restore_cache:
        keys:
        - yarn-packages-{{ checksum "yarn.lock" }}
        name: Restore Yarn Package Cache
    - run:
        command: yarn --frozen-lockfile && git diff --exit-code yarn.lock
        name: Install dependencies
    - save_cache:
        key: yarn-packages-{{ checksum "yarn.lock" }}
        name: Save Yarn Package Cache
        paths:
        - ~/.cache/yarn
    - run:
        command: bundle exec appraisal graphql-1.9 yarn test
    - run:
        command: yarn lint
  integration-tests-graphql-1.10:
    docker:
    - image: circleci/ruby:2.6-node
    steps:
    - checkout
    - run:
        command: |
          echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
          source $BASH_ENV
          gem install bundler
        name: Configure Bundler
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "Gemfile.lock" }}
        name: Restore Ruby Package Cache
    - run:
        command: |
          bundle install --jobs=4 --retry=3 --gemfile Gemfile --path vendor/bundle && git diff --exit-code Gemfile.lock
        name: Install dependencies
    - save_cache:
        key: v1-dependencies-{{ checksum "Gemfile.lock" }}
        name: Save Ruby Package Cache
        paths:
        - ./vendor/bundle
    - run:
        name: Install appraisal dependencies
        command: |
          bundle exec appraisal graphql-1.10 bundle install --jobs=4 --retry=3 --path=../vendor/bundle
          bundle config unset path
    - checkout
    - restore_cache:
        keys:
        - yarn-packages-{{ checksum "yarn.lock" }}
        name: Restore Yarn Package Cache
    - run:
        command: yarn --frozen-lockfile && git diff --exit-code yarn.lock
        name: Install dependencies
    - save_cache:
        key: yarn-packages-{{ checksum "yarn.lock" }}
        name: Save Yarn Package Cache
        paths:
        - ~/.cache/yarn
    - run:
        command: bundle exec appraisal graphql-1.10 yarn test
    - run:
        command: yarn lint
  release:
    docker:
    - image: circleci/ruby:2.6-node
    steps:
    - checkout
    - run:
        command: |
          echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
          source $BASH_ENV
          gem install bundler
        name: Configure Bundler
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "Gemfile.lock" }}
        name: Restore Ruby Package Cache
    - run:
        command: |
          bundle install --jobs=4 --retry=3 --gemfile Gemfile --path vendor/bundle && git diff --exit-code Gemfile.lock
        name: Install dependencies
    - save_cache:
        key: v1-dependencies-{{ checksum "Gemfile.lock" }}
        name: Save Ruby Package Cache
        paths:
        - ./vendor/bundle
    - checkout
    - restore_cache:
        keys:
        - yarn-packages-{{ checksum "yarn.lock" }}
        name: Restore Yarn Package Cache
    - run:
        command: yarn --frozen-lockfile && git diff --exit-code yarn.lock
        name: Install dependencies
    - save_cache:
        key: yarn-packages-{{ checksum "yarn.lock" }}
        name: Save Yarn Package Cache
        paths:
        - ~/.cache/yarn
    - run:
        command: |
          mkdir -p ~/.gem
          echo -e "---\r\n:rubygems_api_key: $GEM_HOST_API_KEY" > ~/.gem/credentials
          chmod 0600 /home/circleci/.gem/credentials
    - run:
        command: npx semantic-release --debug
workflows:
  version: 2
  main:
    jobs:
    - gusto/ruby-lint
    - ruby-test-graphql-1.9
    - ruby-test-graphql-1.10
    - integration-tests-graphql-1.9
    - integration-tests-graphql-1.10
    - release:
        filters:
          branches:
            only: master
        requires:
        - gusto/ruby-lint
        - ruby-test-graphql-1.9
        - ruby-test-graphql-1.10
        - integration-tests-graphql-1.9
        - integration-tests-graphql-1.10

# Original config.yml file:
# version: 2.1
# 
# orbs:
#   gusto: gusto/gusto@0.0.13
# 
# jobs:
#   # ruby-test:
#   #   parameters:
#   #     appraisal:
#   #       type: string
#   #   executor: gusto/ruby-2-3
#   #   environment:
#   #     BUNDLE_PATH: vendor/bundle
#   #   steps:
#   #     - checkout
#   #     - run:
#   #         name: Configure Bundler
#   #         command: |
#   #           echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d \" \")' >> $BASH_ENV
#   #           source $BASH_ENV
#   #           gem install bundler
#   #     - restore_cache:
#   #         name: Restore Ruby Package Cache
#   #         keys:
#   #           - v1-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum \"Gemfile.lock\" }}
#   #           - v1-gem-cache-{{ arch }}-{{ .Branch }}-
#   #           - v1-gem-cache-{{ arch }}-
#   #     - run:
#   #         name: Install base Ruby dependencies
#   #         # TODO: Maybe just install appraisal?
#   #         command: |
#   #           bundle install --jobs=4 --retry=3
#   #     - save_cache:
#   #           name: Save Ruby Package Cache
#   #           key: v1-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum \"Gemfile.lock\" }}
#   #           paths:
#   #             - ./vendor/bundle
#   #     - run:
#   #         name: Copy lockfile
#   #         command: |
#   #           bundle exec appraisal << parameters.appraisal >>  \"cp \\$BUNDLE_GEMFILE.lock current_appraisal.gemfile.lock\"
#   #     - restore_cache:
#   #         name: Restore Ruby Package Cache
#   #         keys:
#   #           - v1-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum \"current_appraisal.gemfile.lock\" }}
#   #           - v1-gem-cache-{{ arch }}-{{ .Branch }}-
#   #           - v1-gem-cache-{{ arch }}-
#   #     - run:
#   #         name: Install appraisal dependencies
#   #         command: |
#   #           bundle exec appraisal << parameters.appraisal >> bundle install --jobs=4 --retry=3 --path=../vendor/bundle
#   #           bundle config unset path
#   #     - save_cache:
#   #         name: Save Ruby Package Cache
#   #         key: v1-gem-cache-{{ arch }}-{{ .Branch }}-{{ checksum \"current_appraisal.gemfile.lock\" }}
#   #         paths:
#   #           - ./vendor/bundle
#   #     - run: bundle exec appraisal << parameters.appraisal >> rake
#   ruby-test:
#     parameters:
#       appraisal:
#         type: string
#     executor: gusto/ruby-2-3
#     environment:
#       BUNDLE_PATH: vendor/bundle
#     steps:
#       - checkout
#       - gusto/bundle-install
#       - run:
#           name: Install appraisal dependencies
#           command: |
#             bundle exec appraisal << parameters.appraisal >> bundle install --jobs=4 --retry=3 --path=../vendor/bundle
#             bundle config unset path
#       - run: bundle exec appraisal << parameters.appraisal >> rake
#   integration-tests:
#     parameters:
#       appraisal:
#         type: string
#     docker:
#       - image: circleci/ruby:2.6-node
#     steps:
#       - gusto/bundle-install
#       - run:
#           name: Install appraisal dependencies
#           command: |
#             bundle exec appraisal << parameters.appraisal >> bundle install --jobs=4 --retry=3 --path=../vendor/bundle
#             bundle config unset path
#       - gusto/yarn-install
#       - run: bundle exec appraisal << parameters.appraisal >> yarn test
#       - run: yarn lint
#   release:
#     docker:
#       - image: circleci/ruby:2.6-node
#     steps:
#       - gusto/semantic-release-ruby
# 
# workflows:
#   version: 2
#   main:
#     jobs:
#       - gusto/ruby-lint
#       - ruby-test:
#           matrix:
#             parameters:
#               appraisal: [\"graphql-1.9\", \"graphql-1.10\"]
#       - integration-tests:
#           matrix:
#             parameters:
#               appraisal: [\"graphql-1.9\", \"graphql-1.10\"]
#       - release:
#           filters:
#             branches:
#               only: master
#           requires:
#             - gusto/ruby-lint
#             - ruby-test
#             - integration-tests